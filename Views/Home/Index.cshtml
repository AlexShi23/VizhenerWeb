@model VizhenerViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no" />
    <title>Шифр Вижинера</title>
    <link rel="icon" href="~/newfavicon.ico" type="image/x-icon" />
    <link rel="stylesheet" type="text/css" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/style.css" />
</head>

<body class="text-center">
    <h1 class="text-center" style="margin: 18px;">Шифр Вижинера</h1>
    <div class="container py-3">
        @using (Html.BeginForm("Update", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row-cols-1">
                @Html.TextAreaFor(model => model.Message, new
                {
                    @id = "message",
                    @class = "form-control-lg flex-fill",
                    @placeholder = "Введите сообщение",
                    @style = "resize: none;width: 1100px;height: 200px;"
                })
            </div>
            <div class="row row-cols-1 row-cols-md-4 mb-4 text-center" style="padding: 5px;padding-top: 24px;">

                <div class="d-flex d-xl-flex justify-content-xl-end col">
                    @Html.EditorFor(model => model.Key, new
                    {
                        htmlAttributes = new
                        {
                            @id = "key",
                            @class = "form-control-lg",
                            @maxlength = "250",
                            @required = "required",
                            @placeholder = "Введите ключ"
                        }
                    })
                </div>

                <div class="col">
                    <div class="form-check">
                        @Html.RadioButtonFor(model => model.Mode, CipherMode.Encrypt, new
                        {
                            @id = "mode-encrypt",
                            @class = "form-check-input",
                            @type = "radio",
                            @required = "required",
                            @name = "mode"
                        })
                        <label class="form-check-label" for="formCheck-1">Зашифровать</label>
                    </div>
                    <div class="form-check">
                        @Html.RadioButtonFor(model => model.Mode, CipherMode.Decrypt, new
                        {
                            @id = "mode-decrypt",
                            @class = "form-check-input",
                            @type = "radio",
                            @name = "mode"
                        })
                        <label class="form-check-label" for="formCheck-2">Расшифровать</label>
                    </div>
                </div>

                <div class="text-center d-xl-flex justify-content-xl-end align-items-xl-center col">
                    <input class="d-xl-flex justify-content-xl-end" type="file" name="file" id="file" accept=".docx" style="margin-right: -60px;">
                </div>
                <div class="text-right col">
                    <button class="btn btn-primary btn-lg text-left" type="submit">Рассчитать</button>
                </div>
            </div>
        }
        <div class="row-cols-1">
            @Html.TextAreaFor(model => model.Result, new
            {
               @id = "result",
               @class = "form-control-lg flex-fill",
               @readonly = "readonly",
               @placeholder = "Результат",
               @style = "resize: none;width: 1100px;height: 200px;"
            })

            <div class="row row-cols-1 row-cols-md-4 mb-4 text-center" style="padding: 5px;padding-top: 24px;">
                <div class="d-xl-flex justify-content-xl-start col">
                    @if (Model != null && !string.IsNullOrEmpty(Model.Result) && Model.Error == null)
                    {
                        @using (Html.BeginForm("DownloadFile", "Home", FormMethod.Post))
                        {
                            @Html.HiddenFor(model => model.Message)
                            @Html.HiddenFor(model => model.Key)
                            @Html.HiddenFor(model => model.Mode)
                            @Html.HiddenFor(model => model.Result)
                            <input class="btn btn-success btn-lg text-left" type="submit" value="Скачать файл" />
                        }
                    }
                </div>
                <div class="col"></div>
            </div>
            @if (Model != null && Model.Error != null)
            {
                <div class="alert alert-danger" role="alert">
                    @Model.Error
                </div>  
            }
        </div>
    </div>
</body>
</html>